#!/bin/bash

# Gerekli: figlet, lolcat, whois, curl
# Termux iÃ§in kurulumu:
# pkg install figlet lolcat whois curl -y

clear
figlet "GTX LINKSCAN" | lolcat
echo -e "\033[36mBu araÃ§ GtxAnqel tarafÄ±ndan geliÅŸtirilmiÅŸtir. EÄŸitim amaÃ§lÄ±dÄ±r.\033[0m"
echo "â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€"
echo ""

function link_kontrol {
    local url="$1"

    # Basit URL doÄŸrulama (http veya https ile baÅŸlamalÄ±)
    if ! echo "$url" | grep -qE '^https?://'; then
        echo -e "\033[31m[!] GeÃ§ersiz URL formatÄ±. LÃ¼tfen 'http://' veya 'https://' ile baÅŸlayÄ±n.\033[0m"
        return 1
    fi

    echo -e "\n[âœ“] BaÄŸlantÄ± kontrol ediliyor..."

    # HTTPS kontrolÃ¼
    if echo "$url" | grep -q "^https://"; then
        echo -e "\033[32m[+] HTTPS kullanÄ±lÄ±yor: GÃ¼venli baÄŸlantÄ±\033[0m"
    else
        echo -e "\033[33m[-] HTTPS kullanÄ±lmÄ±yor: Dikkatli olun\033[0m"
    fi

    # Domain alma
    domain=$(echo "$url" | awk -F/ '{print $3}')
    if [[ -z "$domain" ]]; then
        echo -e "\033[31m[!] Domain bilgisi alÄ±namadÄ±. LÃ¼tfen geÃ§erli bir URL girin.\033[0m"
        return 1
    fi

    # Whois bilgisi Ã§ekme (hÄ±zlÄ±ca registrar ve creation date)
    whois_info=$(whois "$domain" 2>/dev/null | grep -iE "Registrar|Creation Date|Registry Expiry Date" | head -n 3)

    echo -e "\n[+] Domain bilgisi:"
    if [[ -n "$whois_info" ]]; then
        echo "$whois_info"
    else
        echo "  Whois bilgisi alÄ±namadÄ± veya eriÅŸim engellendi."
    fi

    # URL HTTP durum kodu kontrolÃ¼
    httpcode=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 "$url")

    if [[ "$httpcode" == "200" ]]; then
        echo -e "\033[32m[âœ“] BaÄŸlantÄ± aktif ve eriÅŸilebilir.\033[0m"
    elif [[ "$httpcode" =~ ^3 ]]; then
        echo -e "\033[33m[!] BaÄŸlantÄ± yÃ¶nlendiriliyor (HTTP $httpcode).\033[0m"
    elif [[ "$httpcode" == "000" ]]; then
        echo -e "\033[31m[âœ—] BaÄŸlantÄ±ya ulaÅŸÄ±lamadÄ±. Zaman aÅŸÄ±mÄ± veya DNS hatasÄ±.\033[0m"
    else
        echo -e "\033[31m[âœ—] BaÄŸlantÄ± sorunlu (HTTP $httpcode).\033[0m"
    fi

    echo -e "\n\033[36mTarama tamamlandÄ±. Bu sadece temel bir analizdir.\033[0m"
    echo "â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€"
}

while true; do
    read -p "ğŸ”— Analiz etmek istediÄŸiniz URL'yi girin (Ã‡Ä±kmak iÃ§in 'q' yazÄ±n): " url

    if [[ "$url" == "q" || "$url" == "Q" ]]; then
        echo -e "\n\033[36mÃ‡Ä±kÄ±ÅŸ yapÄ±lÄ±yor. Ä°yi gÃ¼nler!\033[0m"
        exit 0
    fi

    link_kontrol "$url"
done