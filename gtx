#!/bin/bash

clear
figlet "GTX LINKSCAN" | lolcat
echo -e "\033[36mBu araÃ§ GtxAnqel tarafÄ±ndan geliÅŸtirilmiÅŸtir. EÄŸitim amaÃ§lÄ±dÄ±r.\033[0m"
echo "â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€"
echo ""

read -p "ğŸ”— Analiz etmek istediÄŸiniz URL'yi girin: " url

echo -e "\n[âœ“] BaÄŸlantÄ± kontrol ediliyor..."

# HTTPS kontrolÃ¼
if echo "$url" | grep -q "^https://"; then
    echo -e "\033[32m[+] HTTPS kullanÄ±lÄ±yor: GÃ¼venli baÄŸlantÄ±\033[0m"
else
    echo -e "\033[33m[-] HTTPS kullanÄ±lmÄ±yor: Dikkatli olun\033[0m"
fi

# Domain WHOIS bilgisi Ã§ek (temel alan adÄ± kontrolÃ¼)
domain=$(echo $url | awk -F/ '{print $3}')
whois_info=$(whois $domain | grep -i "Registrar\|Creation Date" | head -n 2)

echo -e "\n[+] Domain bilgisi:"
echo "$whois_info"

# URL Ã§alÄ±ÅŸÄ±yor mu kontrol et
httpcode=$(curl -s -o /dev/null -w "%{http_code}" "$url")

if [[ "$httpcode" == "200" ]]; then
    echo -e "\033[32m[âœ“] BaÄŸlantÄ± aktif.\033[0m"
else
    echo -e "\033[31m[âœ—] BaÄŸlantÄ± Ã§alÄ±ÅŸmÄ±yor veya ÅŸÃ¼pheli ($httpcode).\033[0m"
fi

# Virustotal API Entegrasyonu (isteÄŸe baÄŸlÄ± â€“ ekleyebilirim)

echo -e "\n\033[36mTarama tamamlandÄ±. Bu sadece temel bir analizdir.\033[0m"